#!/bin/bash

usage() {
    echo "Usage: opw [-c|--copy] ITEM [FIELD]" 1>&2
}

# Parse arguments
mode="echo"
positional_arguments=()

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -c|--copy)
            mode="copy"
            shift
            ;;
        -h|--help)
            mode="help"
            shift
            ;;
        *)
            positional_arguments+=("$1")
            shift
            ;;
    esac
done
set -- "${positional_arguments[@]}"

if [[ "$mode" == "help" ]]; then
    usage
    exit 0
fi

item_name=${positional_arguments[0]}
field=${positional_arguments[1]}

if [[ -z "$item_name" ]]; then
    usage
    exit 1
fi

session_file="$HOME/.op/session"
if [[ ! -f "$session_file" ]]; then
	touch "$session_file"
	chmod 600 "$session_file"
fi
source "$session_file"
tries=1
until output=$(op get item "$item_name" | jq '[(.details.fields[] | {(.name): .value})] + ([.details.sections[] | select(.fields != null) |.fields[] | {(.t): .v}]) | add'); do
    OP_SESSION_my="$(op signin my --output=raw)"
    tries=$((tries+1))
    if [[ "$tries" -gt 3 ]]; then
        echo "Max tries exceeded"
        exit 1
    fi;
done
echo "export OP_SESSION_my=$OP_SESSION_my" > "$session_file"

export OP_SESSION_my

# Read item from 1Password

if [[ ! -z "$field" ]]; then
    if ! output=$(echo "$output" | jq  -e '."'"$field"'"'); then
        exit 1
    fi
fi

# Output to stdout or clipboard
if [[ "$mode" == "copy" ]]; then
    for clipboard in pbcopy xclip; do
        if type "$clipboard" &> /dev/null; then
            echo "$output" | jq -r '.' | "$clipboard"
            echo "Copied secret to clipboard!"
        fi
    done
else
    echo "$output" | jq -r '.'
fi
